server:
  port: 8080
  servlet:
    context-path: /api/v1
spring:
  datasource:
    url: jdbc:mysql://127.0.0.1:3306/greendardb?serverTimezone=Asia/Seoul&characterEncoding=UTF-8
    username: root
    password: kris2486!
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    hibernate:
      ddl-auto: create
#      ddl-auto: update
#      naming:
##        implicit-strategy: org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl
##        physical-strategy: org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl
##    properties:
##      hibernate:
##        #show_sql: true
##        format_sql: true
##        default_batch_fetch_size: 500
##        #dialect: org.hibernate.spatial.dialect.mysql.MySQL8SpatialDialect
##    #database-platform: org.hibernate.spatial.dialect.mysql.MySQL8SpatialDialect
##    database: mysql
##    #open-in-view: false
##
##  mvc:
##    path match:
##      matching-strategy: ant_path_matcher
##  profiles:
##    include:
##      - gcp
##
##  mail:
##    host: smtp.gmail.com
##    port: 587
##    username: greendar0112@gmail.com
##    password: ayswkuuzgdtxlkst
##    properties:
##      mail:
##        debug: false
##        #        debug: false
##        smtp:
##          auth: true
##          starttls:
##            enable: true
##  # Security OAuth
##  security:
##    oauth2.client:
##      registration:
##        google:
##          clientId: '{구글 client-id}'
##          clientSecret: '{구글 client-secret}'
##          scope:
##            - email
##            - profile
##      #        facebook:
##      #          clientId: '{페이스북 client-id}'
##      #          clientSecret: '{페이스북 client-secret}'
##      #          scope:
##      #            - email
##      #            - public_profile
##      #        naver:
##      #          clientId: '{네이버 client-id}'
##      #          clientSecret: '{네이버 client-secret}'
##      #          clientAuthenticationMethod: post
##      #          authorizationGrantType: authorization_code
##      #          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
##      #          scope:
##      #            - nickname
##      #            - email
##      #            - profile_image
##      #          clientName: Naver
##      #        kakao:
##      #          clientId: '{카카오 client-id}'
##      #          clientSecret: '{카카오 client-secret}'
##      #          clientAuthenticationMethod: post
##      #          authorizationGrantType: authorization_code
##      #          redirectUri: "{baseUrl}/{action}/oauth2/code/{registrationId}"
##      #          scope:
##      #            - profile_nickname
##      #            - profile_image
##      #            - account_email
##      #          clientName: Kakao
##      # Provider 설정
###      provider:
###        naver:
###          authorizationUri: https://nid.naver.com/oauth2.0/authorize
###          tokenUri: https://nid.naver.com/oauth2.0/token
###          userInfoUri: https://openapi.naver.com/v1/nid/me
###          userNameAttribute: response
###        kakao:
###          authorizationUri: https://kauth.kakao.com/oauth/authorize
###          tokenUri: https://kauth.kakao.com/oauth/token
###          userInfoUri: https://kapi.kakao.com/v2/user/me
###          userNameAttribute: id
##
### cors 설정
##cors:
##  allowed-origins: 'http://localhost:3000' #여기에 해당 사이트 넣어야 함
##  allowed-methods: GET,POST,PUT,DELETE,OPTIONS
##  allowed-headers: '*'
##  max-age: 3600
##
### jwt secret key 설정
##jwt.secret: '8sknjlO3NPTBqo319DHLNqsQAfRJEdKsETOds'
##
### 토큰 관련 secret Key 및 RedirectUri 설정
##app:
##  auth:
##    tokenSecret: 926D96C90030DD58429D2751AC1BDBBC
##    tokenExpiry: 1800000
##    refreshTokenExpiry: 604800000
##  oauth2:
##    authorizedRedirectUris:
##      - http://localhost:3000/oauth/redirect
##
###security:
###  kakao:
###    apikey:
###  jwt:
###    token:
###      secret-key:
###      expire-length: 36000000
###      expire-length-refresh: 5184000000
##
###springdoc:
###  api-docs:
###    groups:
###      enabled: true
###    path: /api-docs
###  swagger-ui:
###    path: /swagger-ui.html
###    display-request-duration: true
##    groups-order: desc

logging:
  level:
    org.hibernate.SQL: debug
    org.hibernate.type: trace

